{"version":3,"sources":["reducers/auth.js","reducers/alert.js","reducers/index.js","actions/types.js","reducers/data.js","store.js","actions/alert.js","utils/setAuthToken.js","actions/auth.js","components/auth/Login.js","components/routing/PrivateRoute.js","components/layout/Alert.js","components/layout/Navbar.js","components/layout/Dashboard.js","actions/data.js","components/routing/Routes.js","App.js","serviceWorker.js","index.js"],"names":["initialState","token","localStorage","getItem","isAuthenticated","loading","user","combineReducers","auth","state","action","payload","type","setItem","removeItem","alert","length","filter","id","data","error","existItem","find","i","map","r","_id","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","setAlert","msg","alertType","timeout","dispatch","uuidv4","setTimeout","setAuthToken","axios","defaults","headers","authorization","loadUser","a","get","res","console","log","layout","labelCol","span","wrapperCol","tailLayout","offset","connect","login","username","password","config","body","JSON","stringify","post","response","message","to","className","name","initialValues","remember","onFinish","values","content","onFinishFailed","errorInfo","Item","label","Password","htmlType","Component","component","rest","render","props","alerts","index","severity","elevation","key","variant","style","width","margin","logout","authLinks","onClick","guestLinks","maxCount","getData","updateData","d","put","deleteData","delete","createRank","Option","Select","useState","undefined","newRankName","setNewRankName","newRankPoints","setNewRankPoints","newRankId","setNewRankId","rankId","setRankId","showDeleteRank","setShowDeleteRank","selectValue","setSelectValue","setValues","useEffect","Array","isArray","prevState","userId","channelId","successCounter","points","rankName","pointsRequired","roleId","discordId","coins","completedQuests","completedAchievements","description","handleChange","e","target","value","updateHandler","select","newVal","Object","entries","includes","split","success","defaultValue","onChange","placeholder","rank","danger","title","visible","onOk","onCancel","okText","cancelText","Routes","exact","path","Login","Dashboard","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9e6e18ab.chunk.js","sourcesContent":["import {\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  LOGOUT,\n  USER_DELETED,\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { payload, type } = action;\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: payload,\n        loading: false,\n      };\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token); //sets token from backend to client storage\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n    case USER_DELETED:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null, //testing\n        isAuthenticated: false,\n        token: null,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  SET_ALERT,\n  REMOVE_ALERT,\n  REMOVE_CURRENT_ALERT,\n} from '../actions/types.js';\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_ALERT:\n      if (state.length < 1) {\n        //current under evaluation\n        return [...state, payload];\n      }\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n\n    case REMOVE_CURRENT_ALERT:\n      state = [];\n      return state;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport alert from './alert';\nimport data from './data';\n\n//main reducer\nexport default combineReducers({\n  auth,\n  alert,\n  data\n});\n","//DATA ACTIONS\nexport const DATA_SUCCESS = 'DATA_SUCCESS';\nexport const DATA_UPDATE = 'DATA_UPDATE';\nexport const DATA_CREATE = 'DATA_CREATE';\nexport const DATA_DELETE = 'DATA_DELETE';\nexport const DATA_ERROR = 'DATA_ERROR';\nexport const CLEAR_DATA = 'CLEAR_DATA';\nexport const UNSUBMIT_SUCCESS = 'UNSUBMIT_SUCCESS';\nexport const UNSUBMIT_FAIL = 'UNSUBMIT_FAIL';\n\n//USER VALIDATION\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\n\n//USER MUTATION ACTIONS\nexport const USER_ERROR = 'USER_ERROR';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const USER_DELETED = 'USER_DELETED';\n\n//LOGIN VALIDATION\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\n//LOGOUT ACTION\nexport const LOGOUT = 'LOGOUT';\n\n//ALERT ACTIONS\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REMOVE_CURRENT_ALERT = 'REMOVE_CURRENT_ALERT';\n","import { DATA_SUCCESS, CLEAR_DATA, DATA_UPDATE, DATA_DELETE, DATA_CREATE } from '../actions/types';\n  \n  export default function (state = { data: null, loading: true, error: null }, action) {\n    const { payload, type } = action;\n    switch (type) {\n      case DATA_SUCCESS:\n        return {\n            ...state,\n          data: payload,\n          loading: false,\n        };\n      case DATA_UPDATE:\n        const existItem = state.data.find((i) => i.type === payload.type);\n        if (existItem) {\n          return {\n            ...state,\n            data: state.data.map((i) =>\n              i.type === existItem.type ? payload : i\n            ),\n          }\n        }\n      case DATA_CREATE:\n          return {\n            ...state,\n            data: [...state.data, payload],\n      };\n      case DATA_DELETE:\n        return {\n          ...state,\n          data: state.data.filter((r) => r._id !== payload),\n        };\n      case CLEAR_DATA:\n        return {\n            data: null,\n            loading: false,\n            error: payload,\n        };\n      default:\n        return state;\n    }\n  }\n  ","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import { SET_ALERT, REMOVE_ALERT, REMOVE_CURRENT_ALERT } from './types';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const setAlert = (msg, alertType, timeout = 4000) => (dispatch) => {\n  const id = uuidv4();\n  dispatch({\n    //triggers reducer\n    type: SET_ALERT,\n    payload: { id, msg, alertType },\n  });\n\n  //after x number of seconds, remove alert\n  setTimeout(() => {\n    dispatch({\n      type: REMOVE_ALERT,\n      payload: id,\n    });\n  }, timeout);\n};\n\nexport const removeCurrentAlert = () => (dispatch) => {\n  setTimeout(() => {\n    dispatch({\n      type: REMOVE_CURRENT_ALERT,\n    });\n  });\n};\n","import axios from \"axios\";\n\nconst setAuthToken = (token) => {\n  if (token) {\n    // set auth token on outgoing requests\n    axios.defaults.headers.authorization = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.authorization;\n  }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport {\n  AUTH_ERROR,\n  USER_LOADED,\n  LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  LOGOUT,\n  CLEAR_DATA\n} from './types';\nimport { setAlert } from './alert';\nimport setAuthToken from '../utils/setAuthToken';\nconst baseUrl = ''\n\nexport const loadUser = () => async (dispatch) => {\n  //Set token from localStorage in browser\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  //check to see if user is valid\n  try {\n    const res = await axios.get(`${baseUrl}/api/auth`);\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err)\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n//Login User\nexport const login = (username, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  const body = JSON.stringify({ username, password });\n  try {\n    const res = await axios.post(`${baseUrl}/api/auth`, body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data, //route sends back token\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    console.log(err.response)\n    var message;\n    message = !err.response.data.message ? 'Server error. Please try again later.' : err.response.data.message\n    dispatch(\n      setAlert(message, 'info')\n    );\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\n//Clear schedule and logout user\nexport const logout = () => async (dispatch) => {\n  dispatch({\n    type: CLEAR_DATA,\n  });\n  dispatch({\n    type: LOGOUT,\n  });\n};\n","//general imports\nimport React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\nimport '../../styles/Login.css';\n\n// antd \nimport { Form, Input, Button, message } from 'antd';\n\nconst layout = {\n  labelCol: { span: 10 },\n  wrapperCol: { span: 16 },\n};\n\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\n\nconst Login = ({ isAuthenticated, login }) => {\n\n  function onFinish(values) {\n    if (!values.username || values.username.length === 0) return message.error({ content: 'Please enter a username.', className: 'invalid-form-modal'});\n    if (!values.password || values.password.length === 0) return message.error({ content: 'Please enter a password.', className: 'invalid-form-modal'});\n   login(values.username, values.password)\n  }\n\n  function onFinishFailed (errorInfo) {\n    console.log('Failed:', errorInfo);\n  }\n\n  if (isAuthenticated) {\n    return <Redirect to=\"dashboard\"></Redirect>;\n  }\n\n  return (\n    <>\n    <div className='form-container'>\n    <Form\n    {...layout}\n      name=\"basic\"\n      initialValues={{\n        remember: true,\n      }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      className='form'\n    >\n      <Form.Item\n        label=\"Username\"\n        className='email-label'\n        name=\"username\"\n      >\n        <Input className='input-item'/>\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n      >\n        <Input.Password className='input-item'/>\n      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\" className='login-button'>\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n    </div>\n    </>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      !isAuthenticated && !loading ? (\n        <Redirect to=\"/\" /> //if not authenticated and not loading, redirect user to login page\n      ) : (\n        <Component {...props} /> //else render component with any props passed into that component\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, {})(PrivateRoute);\n","//general imports\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport '../../styles/Alert.css';\n\n//material ui imports\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst DynamicAlert = ({ alerts }) => {\n  return (\n    alerts !== null &&\n    alerts.length > 0 &&\n    alerts.map((alert, index) => (\n      <MuiAlert\n        severity={alert.alertType}\n        elevation={6}\n        key={index}\n        variant=\"filled\"\n        id=\"mui-alert\"\n        style={{ width: '85%', margin: 'auto' }}\n      >\n        {alert.msg}\n      </MuiAlert>\n    ))\n  );\n};\n\nDynamicAlert.propTypes = {\n  alerts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  //mutate redux state to prop\n  alerts: state.alert,\n});\n\nexport default connect(mapStateToProps, {})(DynamicAlert);\n","import React, { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { logout } from \"../../actions/auth\";\nimport '../../styles/Navbar.css'\n\nfunction Navbar({ logout, auth: { isAuthenticated } }) {\n    const authLinks = (\n      <ul className='ul-links'>\n        <li>\n            <p onClick={logout} className=\"hide-sm\" className='logout-link'>Logout</p>{\" \"}\n        </li>\n      </ul>\n    );\n  \n    const guestLinks = (\n      <ul className='ul-links'>\n        <li>\n          <p></p>\n        </li>\n      </ul>\n    );\n  \n    return (\n      <nav className=\"navbar\">\n        <div className='navbar-content'>\n        <p className='navbar-title'>\n          <Link to=\"/\">\n          <p>Kumiai Admin</p> \n          </Link>\n        </p>\n        {/* If not loading, evaluate fragment */}\n          <Fragment>{(isAuthenticated) ? authLinks : guestLinks}</Fragment>\n        </div>\n      </nav>\n    );\n  };\n  \n  \n  Navbar.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n  };\n  \n  const mapStateToProps = (state) => ({\n    auth: state.auth,\n  });\n  \n  export default connect(mapStateToProps, { logout })(Navbar);\n  ","import React, { useState, useEffect } from 'react';\nimport { Select, message, Input, Button, Modal } from 'antd';\nimport { getData, deleteData, updateData, createRank } from '../../actions/data';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport '../../styles/Dashboard.css'\n\nmessage.config({ maxCount: 1 });\n\nconst Dashboard = ({ getData, updateData, deleteData, data: { data, loading }, createRank }) => {\n  const { Option } = Select;\n\n  const [newRankName, setNewRankName] = useState(undefined);\n  const [newRankPoints, setNewRankPoints] = useState(undefined);\n  const [newRankId, setNewRankId] = useState(undefined);\n\n  const [rankId, setRankId] = useState(undefined);\n  const [showDeleteRank, setShowDeleteRank] = useState(false);\n  const [selectValue, setSelectValue] = useState('ranks');\n  const [values, setValues] = useState({});\n\n  // on select value change\n  useEffect(() => {\n    console.log(selectValue)\n    getData(selectValue)\n  }, [selectValue])\n\n  // load data into state\n  useEffect(() => {\n    setValues({});\n    \n    if (!loading && Array.isArray(data) && selectValue === 'quests') {\n      data.map((d) => {\n        if (d.name) setValues(prevState => ({ ...prevState, [`${selectValue}-${d.type}-name`]: d.name }));\n        if (d.userId) setValues(prevState => ({ ...prevState, [`${selectValue}-${d.type}-userId`]: d.userId }));\n        if (d.type) setValues(prevState => ({ ...prevState, [`${selectValue}-${d.type}-type`]: d.type }));\n        if (d.channelId) setValues(prevState => ({ ...prevState, [`${selectValue}-${d.type}-channelId`]: d.channelId }));\n        if (d.successCounter) setValues(prevState => ({ ...prevState, [`${selectValue}-${d.type}-successCounter`]: d.successCounter }));\n        if (d.message) setValues(prevState => ({ ...prevState, [`${selectValue}-${d.type}-message`]: d.message }));\n      })\n    }\n\n    else if (!loading && Array.isArray(data) && selectValue === 'achievements') {\n      data.map((d) => {\n        if (d.name) setValues(prevState => ({ ...prevState, [`${selectValue}-${d.type}-name`]: d.name }));\n        if (d.channelId) setValues(prevState => ({ ...prevState, [`${selectValue}-${d.type}-channelId`]: d.channelId }));\n        if (d.message) setValues(prevState => ({ ...prevState, [`${selectValue}-${d.type}-message`]: d.message }));\n        if (d.points) setValues(prevState => ({ ...prevState, [`${selectValue}-${d.type}-points`]: d.points }));\n      })\n    }\n\n    else if (!loading && Array.isArray(data) && selectValue === 'ranks') {\n      data.map((d) => {\n        if (d.rankName) setValues(prevState => ({ ...prevState, [`${selectValue}-${d._id}-rankName`]: d.rankName }));\n        if (d.pointsRequired) setValues(prevState => ({ ...prevState, [`${selectValue}-${d._id}-pointsRequired`]: d.pointsRequired }));\n        if (d.roleId) setValues(prevState => ({ ...prevState, [`${selectValue}-${d._id}-roleId`]: d.roleId }));\n      })\n    }\n\n    else if (!loading && Array.isArray(data) && selectValue === 'users') {\n      data.map((d) => {\n        if (d.discordId) setValues(prevState => ({ ...prevState, [`${selectValue}-${d._id}-discordId`]: d.discordId }));\n        if (d.points) setValues(prevState => ({ ...prevState, [`${selectValue}-${d._id}-points`]: d.points }));\n        if (d.coins) setValues(prevState => ({ ...prevState, [`${selectValue}-${d._id}-coins`]: d.coins }));\n        if (d.completedQuests) setValues(prevState => ({ ...prevState, [`${selectValue}-${d._id}-completedQuests`]: d.completedQuests }));\n        if (d.completedAchievements) setValues(prevState => ({ ...prevState, [`${selectValue}-${d._id}-completedAchievements`]: d.completedAchievements }));\n      })\n    }\n\n    else if (!loading && Array.isArray(data) && selectValue === 'passive') {\n      data.map((d) => {\n        if (d.name) setValues(prevState => ({ ...prevState, [`${selectValue}-${d._id}-name`]: d.name }));\n        if (d.description) setValues(prevState => ({ ...prevState, [`${selectValue}-${d._id}-description`]: d.description }));\n      })\n    }\n  }, [data])\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues(prevState => ({ ...prevState, [name]: value }));\n  }\n\n  const updateHandler = (data) => {\n    // select, type\n    const { select, type } = data;\n    const newVal = {};\n    for (const [key, value] of Object.entries(values)) {\n      if (key.includes(`${select}-${type}`)) {\n        var attribute = key.split('-')[2];\n        newVal[attribute] = value;\n        console.log('Value being sent to server for update ' + newVal);\n      }\n    }\n    // make update request\n    updateData({ select, type, newVal });\n    // updated message\n    return message.success(`${selectValue} data updated.`);\n  }\n\n  const submitRank = () => {\n    if (!newRankName || !newRankPoints || !newRankId) return message.error('Please fill out all fields.')\n    const data = { type: selectValue, rank: { rankName: newRankName, pointsRequired: newRankPoints, roleId: newRankId }};\n    createRank(data);\n    setNewRankName(undefined);\n    setNewRankPoints(undefined);\n    setNewRankId(undefined);\n    return message.success('Rank successfully created.');\n  }\n\n  const handleShowDeleteModal = (id) => {\n    setRankId(id);\n    setShowDeleteRank(true);\n  }\n\n  const handleHideDeleteModal = () => {\n    setShowDeleteRank(false);\n  }\n\n  const handleOkDeleteModal = () => {\n    deleteData({type: selectValue, id: rankId});\n    setShowDeleteRank(false);\n    return message.success('Rank has been deleted.')\n  };\n\n  return (\n    <>\n    <div className='dashboard-select-wrapper'>\n    <Select defaultValue=\"ranks\" style={{ width: 120 }} onChange={(value) => setSelectValue(value)}>\n      <Option value=\"ranks\">Ranks</Option>\n      <Option value=\"quests\">Quests</Option>\n      <Option value=\"achievements\">Achievements</Option>\n      <Option value=\"users\">Users</Option>\n      <Option value=\"passive\">Passive Tasks</Option>\n    </Select>\n    </div>\n    \n    <div className='dashboard-content-wrapper'>\n    {(!data && loading) || (data && loading) ? <p>loading...</p>\n    : data !== undefined && Array.isArray(data) && !loading ? <>\n\n      {selectValue === 'ranks' && <>\n      <h3>All of the ranks available within the community.</h3>\n      \n      <div className='create-rank-container'>\n      <h4>Create a rank</h4>\n      <Input placeholder=\"New Rank Name\" onChange={(e) => setNewRankName(e.target.value)} value={newRankName} />\n      <Input placeholder=\"New Rank Points Required\" onChange={(e) => setNewRankPoints(e.target.value)} value={newRankPoints} />\n      <Input placeholder=\"New Rank Role ID\" onChange={(e) => setNewRankId(e.target.value)} value={newRankId} />\n      <Button type=\"primary\" onClick={() => submitRank()}>Update</Button>\n      </div>\n\n        {data.map((d) => {\n          return (\n            <div className='rank-item'>\n              {d.rankName && <div> <p>Rank Name: </p> <Input placeholder=\"Rank Name\" onChange={handleChange} value={values[`${selectValue}-${d._id}-rankName`]} name={`${selectValue}-${d._id}-rankName`} /> </div>}\n              {d.pointsRequired && <div> <p>Points Needed: </p> <Input placeholder=\"Points Required\" onChange={handleChange} value={values[`${selectValue}-${d._id}-pointsRequired`]} name={`${selectValue}-${d._id}-pointsRequired`} /> </div>}\n              {d.roleId && <div> <p>Rank Role ID: </p> <Input placeholder=\"Role ID\" onChange={handleChange} value={values[`${selectValue}-${d._id}-roleId`]} name={`${selectValue}-${d._id}-roleId`} /> </div>}\n              <br/>\n              <Button type=\"primary\" danger onClick={() => handleShowDeleteModal(d._id)} className='ant-delete-button'>Delete</Button>\n              <Button type=\"primary\" onClick={() => updateHandler({ select: selectValue, type: d._id })}>Update</Button>\n            </div>\n          )\n        })}\n      </>\n      }\n      <Modal\n        title=\"Delete rank\"\n        visible={showDeleteRank}\n        onOk={handleOkDeleteModal}\n        onCancel={handleHideDeleteModal}\n        okText='Yes'\n        cancelText='No'\n      >\n        Are you sure you'd like to delete this rank?\n      </Modal>\n\n      {selectValue === 'quests' && <>\n      <h4>To add or delete a quest, contact a developer.</h4>\n      <div>\n        {data.map((d) => {\n          return (\n            <div className='quest-item'>\n              {d.type && <div> <p>Quest Type: {d.type}</p>  </div>}\n              {d.name && <div> <p>Quest Name: </p> <Input placeholder=\"Quest Name\" onChange={handleChange} value={values[`${selectValue}-${d.type}-name`]} name={`${selectValue}-${d.type}-name`} /> </div>}\n              {d.userId && <div> <p>Quest User ID: </p> <Input placeholder=\"Quest User ID\" onChange={handleChange} value={values[`${selectValue}-${d.type}-userId`]} name={`${selectValue}-${d.type}-userId`} /> </div>}\n              {d.channelId && <div> <p>Quest Channel ID: </p> <Input placeholder=\"Quest Channel ID\" onChange={handleChange} value={values[`${selectValue}-${d.type}-channelId`]} name={`${selectValue}-${d.type}-channelId`} /> </div>}\n              {d.successCounter && <div> <p>Quest Success Counter: </p> <Input placeholder=\"Quest Success Counter\" onChange={handleChange} value={values[`${selectValue}-${d.type}-successCounter`]} name={`${selectValue}-${d.type}-successCounter`} /> </div>}\n              {d.message && <div> <p>Quest Notes: </p> <Input placeholder=\"Quest Notes\" onChange={handleChange} value={values[`${selectValue}-${d.type}-message`]} name={`${selectValue}-${d.type}-message`} /> </div>}\n              <br/>\n              <Button type=\"primary\" onClick={() => updateHandler({ select: selectValue, type: d.type })}>Update</Button>\n            </div>\n          )\n        })}\n        </div>\n      </>\n      }\n\n    {selectValue === 'achievements' && <>\n    <h4>To add or delete an achievement, contact a developer.</h4>\n        {data.map((d) => {\n          return (\n            <div className='achievement-item'>\n              {d.type && <div> <p>Achievement Type: {d.type} </p> </div>}\n              {d.name && <div> <p>Achievement Name: </p> <Input placeholder=\"Achievement Name\" onChange={handleChange} value={values[`${selectValue}-${d.type}-name`]} name={`${selectValue}-${d.type}-name`} /> </div>}\n              {d.channelId && <div> <p>Achievement Channel ID: </p> <Input placeholder=\"Achievement Channel ID\" onChange={handleChange} value={values[`${selectValue}-${d.type}-channelId`]} name={`${selectValue}-${d.type}-channelId`} /> </div>}\n              {d.message && <div> <p>Achievement Message: </p> <Input placeholder=\"Achievement Message\" onChange={handleChange} value={values[`${selectValue}-${d.type}-message`]} name={`${selectValue}-${d.type}-message`} /> </div>}\n              {d.points && <div> <p>Achievement Points: </p> <Input placeholder=\"Achievement Points\" onChange={handleChange} value={values[`${selectValue}-${d.type}-points`]} name={`${selectValue}-${d.type}-points`} /> </div>}\n              <Button type=\"primary\" onClick={() => updateHandler({ select: selectValue, type: d.type })}>Update</Button>\n            </div>\n          )\n        })}\n      </>\n      }\n\n      {selectValue === 'users' && <>\n      <h4>All the users within the community.</h4>\n        {data.map((d) => {\n          return (\n            <div className='user-item'>\n              {d.discordId && <p>Discord ID: {values[`${selectValue}-${d._id}-discordId`]} </p>}\n              {d.points && <div> <p>User Points: </p> <Input placeholder=\"Points\" onChange={handleChange} value={values[`${selectValue}-${d._id}-points`]} name={`${selectValue}-${d._id}-points`} /> </div>}\n              {d.coins && <div> <p>User coins: </p> <Input placeholder=\"Coins\" onChange={handleChange} value={values[`${selectValue}-${d._id}-coins`]} name={`${selectValue}-${d._id}-coins`} /> </div>}\n              <Button type=\"primary\" onClick={() => updateHandler({ select: selectValue, type: d._id })}>Update</Button>\n            </div>\n          )\n        })}\n      </>\n      }\n\n    {selectValue === 'passive' && <>\n      <h4>Discord bot passive tasks.</h4>\n        {data.map((d) => {\n          return (\n            <div className='user-item'>\n              {d.name && <div> <p>Task Name: {values[`${selectValue}-${d._id}-name`]}</p> </div>}\n              {d.description && <div> <p>Task Description: {values[`${selectValue}-${d._id}-description`]}</p> </div>}\n            </div>\n          )\n        })}\n      </>\n      }\n      </>\n      : <p>Something went wrong, please try again later.</p> \n    }\n  </div>\n  </>\n  )\n}\n\nDashboard.propTypes = {\n  getData: PropTypes.func.isRequired,\n  updateData: PropTypes.func.isRequired,\n  deleteData: PropTypes.func.isRequired,\n  createRank: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps, { getData, updateData, deleteData, createRank })(Dashboard);\n","import axios from 'axios';\nimport data from '../reducers/data';\nimport {\n    DATA_SUCCESS,\n    CLEAR_DATA,\n    DATA_UPDATE,\n    DATA_DELETE,\n    DATA_CREATE\n} from './types';\n\nconst baseUrl = ''\n\nexport const getData = (type) => async (dispatch) => {\n  //check to see if user is valid\n  try {\n    const res = await axios.get(`${baseUrl}/api/data/${type}`);\n    dispatch({\n      type: DATA_SUCCESS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err)\n    dispatch({\n      type: CLEAR_DATA,\n    });\n  }\n};\n\nexport const updateData = (d) => async (dispatch) => {\n  //check to see if user is valid\n  try {\n    console.log('update data called')\n    const res = await axios.put(`${baseUrl}/api/data`, d);\n    dispatch({\n      type: DATA_UPDATE,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err)\n    dispatch({\n      type: CLEAR_DATA,\n    });\n  }\n};\n\nexport const deleteData = (data) => async (dispatch) => {\n  //check to see if user is valid\n  try {\n    const res = await axios.delete(`${baseUrl}/api/data/${data.type}/${data.id}`);\n    dispatch({\n      type: DATA_DELETE,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err)\n    dispatch({\n      type: CLEAR_DATA,\n    });\n  }\n};\n\nexport const createRank = (data) => async (dispatch) => {\n  //check to see if user is valid\n  try {\n    console.log(data);\n    const res = await axios.post(`${baseUrl}/api/data`, data);\n    dispatch({\n      type: DATA_CREATE,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err)\n    dispatch({\n      type: CLEAR_DATA,\n    });\n  }\n};","//general imports\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n//Component imports\nimport Login from '../auth/Login';\nimport PrivateRoute from './PrivateRoute';\nimport DynamicAlert from '../layout/Alert';\nimport Navbar from '../layout/Navbar';\nimport Dashboard from '../layout/Dashboard';\n\nconst Routes = () => {\n  return (\n    <>\n      <Navbar></Navbar>\n      <DynamicAlert />\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/dashboard\" component={Dashboard} />\n      </Switch>\n    </>\n  );\n};\n\nexport default Routes;\n","import React, { Fragment, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\n//Redux imports\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUser } from \"./actions/auth\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\n\n//import Routes\nimport Routes from \"./components/routing/Routes\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Switch>\n            <Route component={Routes} />\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css'\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}